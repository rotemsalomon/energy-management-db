look up sensor_info table for all unique sensor_name
Connect to emqx as a subscriber to all topics (keep connection open)
based on the sensor_name filte topics subscribed to based "/ble/{sensor_name}"
for each topic, connect to sql
write message data to sensor_data table:
{Timestamp} write to response_time column
{Complete Local Name} write to sensor_name column
{MAC Address} write to sensor_mac column
{UUID} write to sensor_uuid column
{Major} write to sensor_major column
{Minor} write to sensor_minor column
{Rx Power (dBm)} write to sensor_rxpower column 
{Battery Voltage (mV)} write to sensor_battery column 
{Broadcast Interval (ms)} write to sensor_bcst_interval column 
{Temperature} write to sensor_temperature column
{Humidity} write to sensor_humidity column
close connection to sql

Create a database table called "sensor_info"
## Each capability of a sensor is modelled as it own row.
## Example: A BLE sensor with capability of measuring temperature, humidity and acceleration,
## will have three rows in the table. All with same asset_id, sensor_mac, sensor_name, sensor_type etc
id = AUTO_GENERATED = INTEGER
org_id = {Match org_id: "org_id"} = TEXT
asset_id = {Match asset_info: "sensor_id"} = TEXT
sensor_name = {Complete Local Name} = TEXT
sensor_mac = {MAC Address} = TEXT
sensor_uuid = fda50693-a4e2-4fb1-afcf-c6eb07647825 = TEXT
sensor_type = "Beacon" = TEXT
sensor_manufacturer = "HBC0101" = TEXT
sensor_proto = "BLE" = TEXT
sensor_major = "10801" = INTEGER
sensor_minor = "147" = INTEGER
sensor_measure = "Temperature" || "Humdity" || "Acceleration" = TEXT

CREATE TABLE sensor_info (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    org_id TEXT,
    asset_id TEXT NOT NULL,
    sensor_id TEXT NOT NULL,
    sensor_info TEXT,
    sensor_name TEXT,
    sensor_mac TEXT,
    sensor_uuid TEXT,
    sensor_type TEXT,
    sensor_manufacturer TEXT,
    sensor_proto TEXT,
    sensor_major INTEGER,
    sensor_minor INTEGER,
    sensor_metric TEXT
);

import sqlite3

DB_FILE = '/root/projects/tasmota/sqlite3_db/tasmota_data.db'

def insert_sensor_info():
    """Insert a new sensor record into the sensor_info table."""
    sensor_data = {
        "org_id": "50110219460",
        "asset_id": "DC234SN",
        "sensor_id": "bc2891d4-b733-46fd-9d95-7dba4b969f65",
        "sensor_info": "out-fridge-temp",
        "sensor_name": "K000092",
        "sensor_mac": "f0:c8:5a:00:00:92",
        "sensor_uuid": "338edece-18be-414a-805d-bc9df6f27f79",
        "sensor_type": "Beacon",
        "sensor_manufacturer": "HCBB01",
        "sensor_proto": "BLE",
        "sensor_major": "10801",
        "sensor_minor": "146",
        "sensor_metric": "Temperature",
    }
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute("""
            INSERT INTO sensor_info (
                org_id, asset_id, sensor_id, sensor_info, sensor_name,
                sensor_mac, sensor_uuid, sensor_type, sensor_manufacturer,
                sensor_proto, sensor_major, sensor_minor, sensor_metric
            ) VALUES (
                :org_id, :asset_id, :sensor_id, :sensor_info, :sensor_name,
                :sensor_mac, :sensor_uuid, :sensor_type, :sensor_manufacturer,
                :sensor_proto, :sensor_major, :sensor_minor, :sensor_metric
            )
        """, sensor_data)
        conn.commit()
        conn.close()
        logger.info("Sensor info inserted successfully into the database.")
    except sqlite3.Error as e:
        logger.error(f"Error inserting into sensor_info table: {e}")

# Call the function to insert the sensor info
insert_sensor_info()

org_id = "50110219460"
asset_id = "DC234SN"
sensor_id = "bc2891d4-b733-46fd-9d95-7dba4b969f65"
sensor_info = "out-fridge-temp"
sensor_name = "K000092"
sensor_mac = "f0:c8:5a:00:00:92"
sensor_uuid = "338edece-18be-414a-805d-bc9df6f27f79"
sensor_type = "Beacon"
sensor_manufacturer = "HCBB01"
sensor_proto = "BLE"
sensor_major = "10801"
sensor_minor = "146"
sensor_metric = "Temperature"

org_id = "50110219460"
asset_id = "DC234SN"
sensor_id = "bc2891d4-b733-46fd-9d95-7dba4b969f65"
sensor_info = "out-fridge-temp"
sensor_name = "K000092"
sensor_mac = "f0:c8:5a:00:00:92"
sensor_uuid = "338edece-18be-414a-805d-bc9df6f27f79"
sensor_type = "Beacon"
sensor_manufacturer = "HCBB01"
sensor_proto = "BLE"
sensor_major = "10801"
sensor_minor = "146"
sensor_metric = "Humidity"

org_id = "50110219460"
asset_id = "DC234SN"
sensor_id = "bc2891d4-b733-46fd-9d95-7dba4b969f65"
sensor_info = "in-fridge-temp"
sensor_name = "K000093"
sensor_mac = "f0:c8:5a:00:00:93"
sensor_uuid = "fda50693-a4e2-4fb1-afcf-c6eb07647825"
sensor_type = "Beacon"
sensor_manufacturer = "HCBB01"
sensor_proto = "BLE"
sensor_major = "10801"
sensor_minor = "147"
sensor_metric = "Temperature"

org_id = "50110219460"
asset_id = "DC234SN"
sensor_id = "bc2891d4-b733-46fd-9d95-7dba4b969f65"
sensor_info = "in-fridge-temp"
sensor_name = "K000093"
sensor_mac = "f0:c8:5a:00:00:93"
sensor_uuid = "fda50693-a4e2-4fb1-afcf-c6eb07647825"
sensor_type = "Beacon"
sensor_manufacturer = "HCBB01"
sensor_proto = "BLE"
sensor_major = "10801"
sensor_minor = "147"
sensor_metric = "Humidity"

org_id = "50110219460"
asset_id = "DC234SN"
sensor_id = "bc2891d4-b733-46fd-9d95-7dba4b969f65"
sensor_info = "in-fridge-water"
sensor_name = "K000094"
sensor_mac = "f0:c8:5a:00:00:94"
sensor_uuid = "f9c01b9d-e07f-4248-9e1e-3e5a8c9e0f3e"
sensor_type = "Beacon"
sensor_manufacturer = "HCBB01"
sensor_proto = "BLE"
sensor_major = "10801"
sensor_minor = "148"
sensor_mertic = "Temperature"

org_id = "50110219460"
asset_id = "DC234SN"
sensor_id = "f9c01b9d-e07f-4248-9e1e-3e5a8c9e0f3e"
sensor_info = "in-fridge-water"
sensor_name = "K000094"
sensor_mac = "f0:c8:5a:00:00:94"
sensor_uuid = "fda50693-a4e2-4fb1-afcf-c6eb07647825"
sensor_type = "Beacon"
sensor_manufacturer = "HCBB01"
sensor_proto = "BLE"
sensor_major = "10801"
sensor_minor = "148"
sensor_metric = "Humidity"

Create a database table called "sensor_data"
id = AUTO_GENERATED = INTEGER
response_time = {Timestamp} =  TEXT
sensor_name = {Complete Local Name} = TEXT
sensor_mac = {MAC Address} = TEXT
sensor_uuid = {UUID} = TEXT
sensor_major = {Major} = INTEGER
sensor_minor = {Minor} = INTEGER
sensor_rxpower = {Rx Power (dBm)} = INTEGER
sensor_battery = {Battery Voltage (mV)} = INTEGER
sensor_bcst_interval = {Broadcast Interval (ms)} = INTEGER
sensor_temperature = {Temperature} = FLOAT
sensor_humidity = {Humidity} = FLOAT
sensor_acceleration = NULL = FLOAT

CREATE TABLE sensor_data (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    response_time TEXT,
    sensor_name TEXT,
    sensor_mac TEXT,
    sensor_uuid TEXT,
    sensor_major INTEGER,
    sensor_minor INTEGER,
    sensor_rxpower INTEGER,
    sensor_battery INTEGER,
    sensor_bcst_interval INTEGER,
    sensor_temperature FLOAT,
    sensor_humidity FLOAT,
    sensor_acceleration FLOAT
);

"Timestamp": "2025-01-15T12:55:49.158021",
"Complete Local Name": "K000093"
"MAC Address": "f0:c8:5a:00:00:93",
"UUID": "fda50693-a4e2-4fb1-afcf-c6eb07647825",
"Major": 10801,
"Minor": 147,
"Rx Power (dBm)": -61
"Battery Voltage (mV)": 3596,
"Broadcast Interval (ms)": 500,
"Temperature (C)": 4.32,
"Humidity (%)": 97


Output:
{
    "Device Address": "f0:c8:5a:00:00:93",
    "RSSI (dBm)": -47,
    "Timestamp": "2025-01-15T15:01:53.313648",
    "Scan Data": [
        {
            "Type": 1,
            "Description": "Flags",
            "Parsed Data": {
                "Flags": "LE General Discoverable Mode + BR/EDR Not Supported"
            }
        },
        {
            "Type": 255,
            "Description": "Manufacturer",
            "Parsed Data": {
                "Company ID (Raw)": "4c00",
                "Company ID (Big-Endian)": "004c",
                "Length": 2,
                "Data Length": 21,
                "UUID": "fda50693-a4e2-4fb1-afcf-c6eb07647825",
                "Major": 10801,
                "Minor": 147,
                "Rx Power (dBm)": -61
            }
        },
        {
            "Type": 10,
            "Description": "Tx Power",
            "Parsed Data": {
                "Tx Power (dBm)": 0
            }
        },
        {
            "Type": 22,
            "Description": "16b Service Data",
            "Parsed Data": {
                "Service UUID": "4c4b",
                "Battery Voltage (mV)": 3596,
                "Broadcast Interval (ms)": 500,
                "Tx Power (dBm)": 0,
                "MAC Address": "f0:c8:5a:00:00:93",
                "Sensor Configuration": {
                    "Temperature and Humidity Enabled": true,
                    "Temperature and Humidity Sensor Available": true,
                    "Broadcast Interval Adjustment Enabled": true,
                    "Acceleration Sensor Available": true,
                    "Connect Capability Enabled": false,
                    "Reserved Bits": "101"
                },
                "Acceleration Status": "No Movement Detected",
                "Temperature (C)": 4.87,
                "Humidity (%)": 98
            }
        },
        {
            "Type": 9,
            "Description": "Complete Local Name",
            "Parsed Data": {
                "Complete Local Name": "K000093"
            }
        }
    ]
}]