http://192.168.2.133/cm?cmnd=Status0   ## Get all status statistics
http://192.168.2.133/cm?cmnd=Power  ## Get current power status

Set configuration:
http://192.168.2.133/cm?cmnd=DeviceName%20Freezer
http://192.168.2.133/cm?cmnd=FriendlyName%20Storeroom
http://192.168.2.133/cm?cmnd=Timezone 99; 
http://192.168.2.133/cm?cmnd=TimeDst 1,1,10,1,2,660
http://192.168.2.133/cm?cmnd=TimeStd 1,1,4,1,3,600



{
  "Status": {
    "Module": 0,
    "DeviceName": "Tasmota",
    "FriendlyName": [
      "Tasmota"
    ],
    "Topic": "tasmota_F97904",
    "ButtonTopic": "0",
    "Power": "1",
    "PowerLock": "0",
    "PowerOnState": 3,
    "LedState": 1,
    "LedMask": "FFFF",
    "SaveData": 1,
    "SaveState": 1,
    "SwitchTopic": "0",
    "SwitchMode": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "ButtonRetain": 0,
    "SwitchRetain": 0,
    "SensorRetain": 0,
    "PowerRetain": 0,
    "InfoRetain": 0,
    "StateRetain": 0,
    "StatusRetain": 0
  },
  "StatusPRM": {
    "Baudrate": 115200,
    "SerialConfig": "8N1",
    "GroupTopic": "tasmotas",
    "OtaUrl": "http://ota.tasmota.com/tasmota32/release/tasmota32c3.bin",
    "RestartReason": "Software reset digital core",
    "Uptime": "4T02:19:08",
    "StartupUTC": "2024-10-02T05:00:12",
    "Sleep": 50,
    "CfgHolder": 4617,
    "BootCount": 25,
    "BCResetTime": "2024-07-25T02:45:40",
    "SaveCount": 68
  },
  "StatusFWR": {
    "Version": "14.2.0(release-tasmota32)",
    "BuildDateTime": "2024-08-14T12:40:03",
    "Core": "3_0_4",
    "SDK": "5.1.4.240801",
    "CpuFrequency": 160,
    "Hardware": "ESP32-C3 v0.4",
    "CR": "440/699"
  },
  "StatusLOG": {
    "SerialLog": 2,
    "WebLog": 2,
    "MqttLog": 0,
    "SysLog": 0,
    "LogHost": "",
    "LogPort": 514,
    "SSId": [
      "Qazwsxedc123",
      "rsalomon"
    ],
    "TelePeriod": 300,
    "Resolution": "558180C0",
    "SetOption": [
      "00008009",
      "2805C80001000680003C5A0A192800000000",
      "00000080",
      "00006000",
      "00004000",
      "00000000"
    ]
  },
  "StatusMEM": {
    "ProgramSize": 1985,
    "Free": 894,
    "Heap": 184,
    "StackLowMark": 4,
    "PsrMax": 0,
    "PsrFree": 0,
    "ProgramFlashSize": 4096,
    "FlashSize": 4096,
    "FlashChipId": "164020",
    "FlashFrequency": 80,
    "FlashMode": "DIO",
    "Features": [
      "0809",
      "9F9AD7DF",
      "0015A001",
      "B7F7BFCF",
      "05DA9BC4",
      "E0360DC7",
      "480840D2",
      "20200000",
      "D4BC482D",
      "810A80B1",
      "00000015"
    ],
    "Drivers": "1,2,3,!4,!5,7,!8,9,10,11,12,!14,!16,!17,!20,!21,!24,26,!27,29,!34,!35,38,50,52,!59,!60,62,!63,!66,!67,!68,!71,!73,82,!86,!87,!88,!121",
    "Sensors": "1,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,26,31,34,37,39,40,42,43,45,51,52,55,56,58,59,64,66,67,74,85,92,95,98,103,105,109,127",
    "I2CDriver": "7,8,9,10,11,12,13,14,15,17,18,20,24,29,31,36,41,42,44,46,48,58,62,65,69,76,77,82"
  },
  "StatusNET": {
    "Hostname": "tasmota-F97904-6404",
    "IPAddress": "192.168.2.133",
    "Gateway": "192.168.2.1",
    "Subnetmask": "255.255.255.0",
    "DNSServer1": "192.168.2.1",
    "DNSServer2": "0.0.0.0",
    "Mac": "40:4C:CA:F9:79:04",
    "IP6Global": "",
    "IP6Local": "fe80::424c:caff:fef9:7904%st2",
    "Ethernet": {
      "Hostname": "",
      "IPAddress": "0.0.0.0",
      "Gateway": "0.0.0.0",
      "Subnetmask": "0.0.0.0",
      "DNSServer1": "192.168.2.1",
      "DNSServer2": "0.0.0.0",
      "Mac": "00:00:00:00:00:00",
      "IP6Global": "",
      "IP6Local": ""
    },
    "Webserver": 2,
    "HTTP_API": 1,
    "WifiConfig": 4,
    "WifiPower": 19
  },
  "StatusMQT": {
    "MqttHost": "",
    "MqttPort": 1883,
    "MqttClientMask": "DVES_%06X",
    "MqttClient": "DVES_F97904",
    "MqttUser": "DVES_USER",
    "MqttCount": 0,
    "MAX_PACKET_SIZE": 1200,
    "KEEPALIVE": 30,
    "SOCKET_TIMEOUT": 4
  },
  "StatusTIM": {
    "UTC": "2024-10-06T07:19:20Z",
    "Local": "2024-10-06T08:19:20",
    "StartDST": "2024-03-31T02:00:00",
    "EndDST": "2024-10-27T03:00:00",
    "Timezone": "+01:00",
    "Sunrise": "06:58",
    "Sunset": "18:17"
  },
  "StatusPTH": {
    "PowerDelta": 0,
    "PowerLow": 0,
    "PowerHigh": 0,
    "VoltageLow": 0,
    "VoltageHigh": 0,
    "CurrentLow": 0,
    "CurrentHigh": 0,
    "MaxPower": 0,
    "MaxPowerHold": 10,
    "MaxPowerWindow": 30,
    "MaxEnergy": 0,
    "MaxEnergyStart": 0
  },
  "StatusSNS": {
    "Time": "2024-10-06T08:19:20",
    "ENERGY": {
      "TotalStartTime": "2024-04-04T23:46:03",
      "Total": 73.92,
      "Yesterday": 3.497,
      "Today": 0.623,
      "Power": 0,
      "ApparentPower": 0,
      "ReactivePower": 0,
      "Factor": 0,
      "Voltage": 217,
      "Current": 0
    }
  },
  "StatusSTS": {
    "Time": "2024-10-06T08:19:20",
    "Uptime": "4T02:19:08",
    "UptimeSec": 353948,
    "Heap": 181,
    "SleepMode": "Dynamic",
    "Sleep": 50,
    "LoadAvg": 19,
    "MqttCount": 0,
    "Berry": {
      "HeapUsed": 4,
      "Objects": 46
    },
    "POWER": "ON",
    "Wifi": {
      "AP": 2,
      "SSId": "rsalomon",
      "BSSId": "60:22:32:65:A4:56",
      "Channel": 6,
      "Mode": "HT20",
      "RSSI": 82,
      "Signal": -59,
      "LinkCount": 1,
      "Downtime": "0T00:00:03"
    }
  }
}


select id, asset_id,  date, hour, total_kwh, total_kwh_co2e, total_kwh_charge, total_kwh_delta, total_kwh_charge_delta, total_kwh_co2e_delta, total_kwh_delta_percent, total_kwh_charge_delta_percent, total_kwh_co2e_delta_percent, is_benchmark from daily_usage WHERE date = '2025-01-06' AND hour = '14:00';


2025-01-06 21:00:36,947 - INFO - ################# Writing to DB: Asset ID D2209CK09FF60S151 - Hour 18: Total kWh = 1.8328125
2025-01-06 21:00:36,978 - INFO - ################# Writing to DB: Asset ID DC234SN - Hour 18: Total kWh = 2.2031541666666667
2025-01-06 21:00:40,226 - INFO - ################# Writing to DB: Asset ID D2209CK09FF60S151 - Hour 19: Total kWh = 1.8813749999999998
2025-01-06 21:00:40,257 - INFO - ################# Writing to DB: Asset ID DC234SN - Hour 19: Total kWh = 2.2966250000000006


select id, asset_id,  date, hour, update_time, daily_total_kwh, daily_total_kwh_co2e, daily_total_kwh_charge, daily_total_kwh_delta, daily_total_kwh_charge_delta, daily_total_kwh_co2e_delta, daily_total_kwh_delta_percent, daily_total_kwh_charge_delta_percent, daily_total_kwh_co2e_delta_percent, is_benchmark from daily_usage WHERE hour ='11:00' and day_of_week = 'Tuesday' and is_benchmark = '1';
select id, asset_id,  date, hour, update_time, daily_total_kwh, daily_total_kwh_co2e, daily_total_kwh_charge, daily_total_kwh_delta, daily_total_kwh_charge_delta, daily_total_kwh_co2e_delta, daily_total_kwh_delta_percent, daily_total_kwh_charge_delta_percent, daily_total_kwh_co2e_delta_percent, is_benchmark from daily_usage WHERE date = '2025-01-07';



2025-01-07 12:49:01,432 - INFO - DC234SN: for hour 11: The current_hour_kwh is: 0.08135000000000032

2025-01-07 12:59:26,145 - INFO - total_kwh_delta: 1.0813500000000003 - 1.17 = -0.08864999999999967
2025-01-07 12:59:26,145 - INFO - total_kwh_co2e_delta: 0.83 - 0.9  = -0.07000000000000006
2025-01-07 12:59:26,145 - INFO - total_kwh_charge_delta: 0.38 - 0.3936762500000052 = -0.013676250000005219
2025-01-07 12:59:26,145 - INFO - total_kwh_delta_percent: -0.08864999999999967 / 1.17 = -7.58
2025-01-07 12:59:26,145 - INFO - total_kwh_co2e_delta_percent: -0.07000000000000006 / 0.9  = -7.78
2025-01-07 12:59:26,145 - INFO - total_kwh_charge_delta_percent: -0.013676250000005219 / 0.38 = -3.6
2025-01-07 12:59:26,145 - INFO - Comparison results for asset_id DC234SN: -0.08864999999999967 kWh, -0.07000000000000006 CO2e, -0.013676250000005219 charge, -7.58% delta in kWh, -7.78% delta in CO2e, -3.6% delta in charge.
2025-01-07 12:59:26,145 - INFO - Comparison results: -0.08864999999999967, -0.013676250000005219, -0.07000000000000006, -7.58, -3.6, -7.78




2025-01-07 12:49:01,464 - INFO - D2209CK09FF60S151: for hour 11: The current_hour_kwh is: 0.17493750000000027

2025-01-07 13:19:28,016 - INFO - total_kwh_delta: 1.0466291666666667 - 1.31 = -0.26337083333333333
2025-01-07 13:19:28,016 - INFO - total_kwh_co2e_delta: 0.81 - 1.01  = -0.19999999999999996
2025-01-07 13:19:28,017 - INFO - total_kwh_charge_delta: 0.75 - 0.3486601249999927 = 0.4013398750000073


2025-01-07 13:19:28,017 - INFO - total_kwh_delta_percent: -0.26337083333333333 / 1.31 = -20.1
2025-01-07 13:19:28,017 - INFO - total_kwh_charge_delta_percent: 0.4013398750000073 / 0.75 = 53.51
2025-01-07 13:19:28,017 - INFO - total_kwh_co2e_delta_percent: -0.19999999999999996 / 1.01  = -19.8


2025-01-07 12:59:26,198 - INFO - Comparison results for asset_id D2209CK09FF60S151: -0.14506249999999954 kWh, -0.10999999999999999 CO2e, 0.03074762500000683 charge, -12.84% delta in kWh, -12.64% delta in CO2e, 8.31% delta in charge.
2025-01-07 12:59:26,198 - INFO - Comparison results: -0.14506249999999954, 0.03074762500000683, -0.10999999999999999, -12.84, 8.31, -12.64


cid  name                type       notnull  dflt_value         pk
---  ------------------  ---------  -------  -----------------  --
0    id                  INTEGER    0        NULL               1
1    asset_id            TEXT       0        NULL               0
2    premise_id          INTEGER    0        NULL               0
3    name                TEXT       0        NULL               0
4    make                TEXT       0        NULL               0
5    model               TEXT       0        NULL               0
6    type                TEXT       0        NULL               0
7    manufacturer        TEXT       0        NULL               0
8    year                INTEGER    0        NULL               0
9    notes               TEXT       0        NULL               0
10   plug_id             TEXT       0        NULL               0
11   plug_network        TEXT       0        NULL               0
12   plug_ip             TEXT       0        NULL               0
13   plug_subnet         TEXT       0        NULL               0
14   plug_gateway        TEXT       0        NULL               0
15   plug_ip_allocation  TEXT       0        NULL               0
16   plug_sw_version     TEXT       0        NULL               0
17   plug_hostname       TEXT       0        NULL               0
18   plug_make           TEXT       0        NULL               0
19   plug_type           TEXT       0        NULL               0
20   plug_region         TEXT       0        NULL               0
21   plug_amps           TEXT       0        NULL               0
22   plug_proto          TEXT       0        NULL               0
23   plug_uri            TEXT       0        NULL               0
24   service_state       TEXT       0        NULL               0
25   service_mode        TEXT       0        NULL               0
26   service_plan        TEXT       0        NULL               0
27   created_at          TIMESTAMP  0        CURRENT_TIMESTAMP  0
28   updated_at          TIMESTAMP  0        CURRENT_TIMESTAMP  0
29   org_id              TEXT       0        NULL               0

INSERT INTO asset_info (
asset_id, premise_id, name, make, model, type, manufacturer, year, notes,
plug_id, plug_network, plug_ip, plug_subnet, plug_gateway, plug_ip_allocation, plug_sw_version, plug_hostname, 
plug_make, plug_type, plug_region, plug_amps, plug_proto, plug_uri,
service_state, service_mode, service_plan, org_id)
VALUES (
'AIR1234NNNNN',2,'Dining Air Condition','Inverter','XYX','AC','Mitsubishi',2023,,'tasmota-D9DE7C-7804','WIFI',
'192.168.2.78','255.255.255.0','192.168.2.1','dhcp','14.3.0','tasmota-D9DE7C-7804','Tasmota',
'Power','AU',10,'http','cm?cmnd=Status+10','Active','Demo','Saver','50110219460'
);


If power_status if empty or NULL, set as '‘'ON'
If asset_name does not match 'DC2345SN' || 'D2209CK09FF60S151' || 'AIR1234NNNNN', delete row 

if asset_id = DC234SN asset_name = 'Borelli 2-door IDC'
if asset_id = D2209CK09FF60S151 asset_name = 'Borrelli upright freezer'
if asset_id = AIR1234NNNNN asset_name = 'Dining Air Condition'

Checklist for Data Normalization
Missing Values:

Identify and handle missing data appropriately (fill or drop).
Inconsistent Categories:

Standardize strings (e.g., upper/lowercase).
Map incorrect or inconsistent values to valid ones.
Outlier Removal:

Use statistical methods (e.g., interquartile range or quantiles) to remove outliers.
Data Type Validation:

Convert columns to appropriate types for better memory efficiency.
Scaling Numeric Data:

Normalize numeric data using scaling techniques.
Adding Derived Columns:

Create new, meaningful columns for analysis.
Dropping Unnecessary Data:

Remove columns or rows that don't add value to the analysis.

    # Ensure that the agg_factor column is created during aggregation
    chunk['expected_entries'] = 4  # Since 1 minute is roughly 4 * 15 seconds

    # Count actual number of entries per minute interval
    actual_entries = chunk.groupby('minute_interval').size().reset_index(name='actual_entries')

    # Merge actual entries count back into chunk
    chunk = chunk.merge(actual_entries, on='minute_interval', how='left')

    # Calculate agg_factor
    chunk['agg_factor'] = chunk['actual_entries'] / chunk['expected_entries']

    # Group by asset_id, asset_name, power_status, cur_comp_state, and minute interval, then aggregate with weights
    grouped = chunk.groupby(
        ['minute_interval', 'asset_id', 'asset_name', 'power_status', 'cur_comp_state'],
        as_index=False
    ).agg({
        'power': lambda x: sum(x) / len(x),
        'voltage': lambda x: sum(x) / len(x),
        'current': lambda x: sum(x) / len(x),
        'agg_factor': 'mean'  # Ensuring agg_factor is included in the aggregation
    })

def process_data(df):
    # Replace 'NULL' with NaN in the respective columns
    power_null = df['power'].replace('NULL', pd.NA)
    voltage_null = df['voltage'].replace('NULL', pd.NA)
    current_null = df['current'].replace('NULL', pd.NA)

    # Convert to numeric with errors='coerce'
    df['power'] = pd.to_numeric(power_null, errors='coerce')
    df['voltage'] = pd.to_numeric(voltage_null, errors='coerce')
    df['current'] = pd.to_numeric(current_null, errors='coerce')

    # Fill NaN values with appropriate defaults
    df['power'].fillna(0, inplace=True)
    df['voltage'].fillna(df['voltage'].mean(), inplace=True)
    df['current'].fillna(0, inplace=True)

    # Add the expected_entries column for aggregation
    df['expected_entries'] = 4

    # Count actual number of entries per minute interval
    actual_entries = df.groupby('minute_interval').size().reset_index(name='actual_entries')

    # Merge actual entries count back into df
    df = df.merge(actual_entries, on='minute_interval', how='left')

    # Calculate agg_factor
    df['agg_factor'] = df['actual_entries'] / df['expected_entries']

    return df


Name: 3673, dtype: object
Row with mismatched type in column 'id': id                               3675
response_time                 DC234SN
power_status       Borelli 2-door IDC
power             2024-08-31 05:50:47
voltage                           NaN
current                            23
asset_id                        226.0
asset_name                      0.106
cur_comp_state                    NaN
Unnamed: 9                        NaN

id,response_time,power_status,power,voltage,current,asset_id,asset_name,cur_comp_state,
3675,DC234SN,Borelli 2-door IDC,2024-08-31 05:50:47,,23,226.0,0.106,